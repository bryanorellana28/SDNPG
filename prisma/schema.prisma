// This Prisma schema uses MySQL database

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  OPERATOR
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  role     Role   @default(ADMIN)
}

model Credential {
  id          Int    @id @default(autoincrement())
  username    String
  password    String
  description String
  equipments  Equipment[]
}

model Site {
  id        Int    @id @default(autoincrement())
  nombre    String
  clave     String
  ubicacion String
  zona      String
  direccion String
  equipments Equipment[]
}

model Equipment {
  id           Int         @id @default(autoincrement())
  hostname     String
  ip           String
  chassis      String
  serial       String
  version      String
  type         String
  site         Site?       @relation(fields: [siteId], references: [id])
  siteId       Int?
  credential   Credential? @relation(fields: [credentialId], references: [id])
  credentialId Int?
  jobs         Job[]
}

model Backup {
  id         Int      @id @default(autoincrement())
  deviceId   Int
  exportPath String
  exportHash String
  binaryPath String?
  binaryHash String?
  diffPath   String?
  createdAt  DateTime @default(now())
}

model Job {
  id        Int      @id @default(autoincrement())
  deviceId  Int
  type      String
  status    String
  scheduledAt DateTime?
  goldenImageId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  equipment   Equipment @relation(fields: [deviceId], references: [id])
  goldenImage GoldenImage? @relation(fields: [goldenImageId], references: [id])
}

model GoldenImage {
  id        Int      @id @default(autoincrement())
  model     String   @unique
  version   String
  filename  String
  sha256    String
  uploadedAt DateTime @default(now())
  jobs      Job[]
}
